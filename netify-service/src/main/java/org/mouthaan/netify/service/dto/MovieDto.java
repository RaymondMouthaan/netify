package org.mouthaan.netify.service.dto;


import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * The class Movie Data Transfer Object.
 * Constructors, getters and setters are generated by Lombok
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class MovieDto {
    private Integer id;
    private String imdbId;
    private String title;
    private String originalTitle;
    private Date releaseDate;
    private Integer runtime;
    private String originalLanguage;
    private Double popularity;
    private String homepage;
    private Integer budget;
    private Integer revenue;
    private String status;
    private String tagline;
    private String overview;
    private Set<GenreDto> genres;
    private Set<RoleDto> cast = new HashSet<>();

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        MovieDto movieDto = (MovieDto) o;

        if (getId() != null ? !getId().equals(movieDto.getId()) : movieDto.getId() != null) return false;
        if (getImdbId() != null ? !getImdbId().equals(movieDto.getImdbId()) : movieDto.getImdbId() != null)
            return false;
        if (getTitle() != null ? !getTitle().equals(movieDto.getTitle()) : movieDto.getTitle() != null) return false;
        if (getOriginalTitle() != null ? !getOriginalTitle().equals(movieDto.getOriginalTitle()) : movieDto.getOriginalTitle() != null)
            return false;
        if (getReleaseDate() != null ? !getReleaseDate().equals(movieDto.getReleaseDate()) : movieDto.getReleaseDate() != null)
            return false;
        if (getRuntime() != null ? !getRuntime().equals(movieDto.getRuntime()) : movieDto.getRuntime() != null)
            return false;
        if (getOriginalLanguage() != null ? !getOriginalLanguage().equals(movieDto.getOriginalLanguage()) : movieDto.getOriginalLanguage() != null)
            return false;
        if (getPopularity() != null ? !getPopularity().equals(movieDto.getPopularity()) : movieDto.getPopularity() != null)
            return false;
        if (getHomepage() != null ? !getHomepage().equals(movieDto.getHomepage()) : movieDto.getHomepage() != null)
            return false;
        if (getBudget() != null ? !getBudget().equals(movieDto.getBudget()) : movieDto.getBudget() != null)
            return false;
        if (getRevenue() != null ? !getRevenue().equals(movieDto.getRevenue()) : movieDto.getRevenue() != null)
            return false;
        if (getStatus() != null ? !getStatus().equals(movieDto.getStatus()) : movieDto.getStatus() != null)
            return false;
        if (getTagline() != null ? !getTagline().equals(movieDto.getTagline()) : movieDto.getTagline() != null)
            return false;
        if (getOverview() != null ? !getOverview().equals(movieDto.getOverview()) : movieDto.getOverview() != null)
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        return id!=null?id:999999999;
    }

}
