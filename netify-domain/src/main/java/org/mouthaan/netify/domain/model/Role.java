package org.mouthaan.netify.domain.model;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import java.io.Serializable;

/**
 * The class Role Entity.
 * Constructors, getters and setters are generated by Lombok
 */
@Entity(name = "Role")
@Table(name = "ntfy_role")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Role implements Serializable, Comparable<Role> {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Integer id;

    @Column(name = "character")
    private String character;

    @Column(name = "role_order")
    private Integer order;

    @Column(name = "movie_id")
    private Integer movieId;

    @Column(name = "actor_id", insertable = false, updatable = false)
    private Integer actorId;

    @ManyToOne(fetch = FetchType.EAGER, cascade = CascadeType.MERGE)
    @JoinColumn(name = "actor_id", insertable = true, updatable = true)
    private Actor actor;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "movie_id", insertable = false, updatable = false)
    private Movie movie;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Role role = (Role) o;

        if (getId() != null ? !getId().equals(role.getId()) : role.getId() != null) return false;
        if (getCharacter() != null ? !getCharacter().equals(role.getCharacter()) : role.getCharacter() != null) return false;
        if (getOrder() != null ? !getOrder().equals(role.getOrder()) : role.getOrder() != null) return false;
        return getActor() != null ? getActor().equals(role.getActor()) : role.getActor() == null;
    }

    @Override
    public int hashCode() {
        int result = getId() != null ? getId().hashCode() : 0;
        result = 31 * result + (getCharacter() != null ? getCharacter().hashCode() : 0);
        result = 31 * result + (getOrder() != null ? getOrder().hashCode() : 0);
        result = 31 * result + (getActor() != null ? getActor().hashCode() : 0);
        return result;
    }

    @Override
    public int compareTo(Role o) {
        return this.getCharacter().compareTo(o.getCharacter());
    }
}
